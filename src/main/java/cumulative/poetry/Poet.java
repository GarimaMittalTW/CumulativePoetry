/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cumulative.poetry;

import java.util.Arrays;
import java.util.List;

public class Poet {
    Poem poem;

    Poet(Poem poem) {
        this.poem = poem;
    }

    public String recite(int index, boolean eFlag) {
        String recite = "";
        for (int i = 1; i <= index; i++) {
            recite = recite + "Day " + i + " -";
            //System.out.println("\nDay " + i + " -");
            recite = recite + revealForTheDay(i, eFlag) + "\n\t\n";
        }
        //System.out.print(recite);
        return recite.trim();
    }

    public String revealForTheDay(int index, boolean eFlag) {
        //System.out.print("This is ");
        String recitePhrase = "This is ";
        for (int i = index - 1; i >= 0; i--) {
            if (i == 0) {
                if (eFlag) {
                    recitePhrase = recitePhrase + poem.lines.get(i) + "\n\t";
                }
                recitePhrase = recitePhrase + poem.lines.get(i) + ".";
                return recitePhrase;
            } else {

                recitePhrase = recitePhrase + poem.lines.get(i) + "\n\t";
                if (eFlag) {
                    recitePhrase = recitePhrase + poem.lines.get(i) + "\n\t";
                }
            }
        }
        return recitePhrase.trim();
    }


}

